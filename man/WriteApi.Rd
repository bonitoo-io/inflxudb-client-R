% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_api.R
\docType{class}
\name{WriteApi}
\alias{WriteApi}
\title{Write operations}
\format{
An \code{R6Class} generator object
}
\description{
influxdbclient.Write
}
\section{Methods}{

\describe{
\strong{ PostWrite } \emph{ Write time series data into InfluxDB }


\itemize{
\item \emph{ @param } org character
\item \emph{ @param } bucket character
\item \emph{ @param } body character
\item \emph{ @param } zap.trace.span character
\item \emph{ @param } content.encoding Enum < [gzip, identity] >
\item \emph{ @param } content.type Enum < [text/plain, text/plain; charset&#x3D;utf-8, application/vnd.influx.arrow] >
\item \emph{ @param } content.length integer
\item \emph{ @param } accept Enum < [application/json] >
\item \emph{ @param } org.id character
\item \emph{ @param } precision \link{WritePrecision}


\item status code : 204 | Write data is correctly formatted and accepted for writing to the bucket.


\item response headers :

\tabular{ll}{
}
\item status code : 400 | Line protocol poorly formed and no points were written.  Response can be used to determine the first malformed line in the body line-protocol. All data in body was rejected and not written.

\item return type : LineProtocolError
\item response headers :

\tabular{ll}{
}
\item status code : 401 | Token does not have sufficient permissions to write to this organization and bucket or the organization and bucket do not exist.

\item return type : Error
\item response headers :

\tabular{ll}{
}
\item status code : 403 | No token was sent and they are required.

\item return type : Error
\item response headers :

\tabular{ll}{
}
\item status code : 413 | Write has been rejected because the payload is too large. Error message returns max size supported. All data in body was rejected and not written.

\item return type : LineProtocolLengthError
\item response headers :

\tabular{ll}{
}
\item status code : 429 | Token is temporarily over quota. The Retry-After header describes when to try the write again.


\item response headers :

\tabular{ll}{
Retry-After \tab A non-negative decimal integer indicating the seconds to delay after the response is received. \cr
}
\item status code : 503 | Server is temporarily unavailable to accept writes.  The Retry-After header describes when to try the write again.


\item response headers :

\tabular{ll}{
Retry-After \tab A non-negative decimal integer indicating the seconds to delay after the response is received. \cr
}
\item status code : 0 | Internal server error

\item return type : Error
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  PostWrite  ####################

library(influxdbclient)
var.org <- 'org_example' # character | Specifies the destination organization for writes. Takes either the ID or Name interchangeably. If both `orgID` and `org` are specified, `org` takes precedence.
var.bucket <- 'bucket_example' # character | The destination bucket for writes.
var.body <- 'body_example' # character | Line protocol body
var.zap.trace.span <- '{\"trace_id\":\"1\",\"span_id\":\"1\",\"baggage\":{\"key\":\"value\"}}' # character | OpenTracing span context
var.content.encoding <- 'identity' # character | When present, its value indicates to the database that compression is applied to the line-protocol body.
var.content.type <- 'text/plain; charset=utf-8' # character | Content-Type is used to indicate the format of the data sent to the server.
var.content.length <- 56 # integer | Content-Length is an entity header is indicating the size of the entity-body, in bytes, sent to the database. If the length is greater than the database max body configuration option, a 413 response is sent.
var.accept <- 'application/json' # character | Specifies the return content format.
var.org.id <- 'org.id_example' # character | Specifies the ID of the destination organization for writes. If both `orgID` and `org` are specified, `org` takes precedence.
var.precision <- WritePrecision$new() # WritePrecision | The precision for the unix timestamps within the body line-protocol.

#Write time series data into InfluxDB
api.instance <- WriteApi$new()

result <- api.instance$PostWrite(var.org, var.bucket, var.body, zap.trace.span=var.zap.trace.span, content.encoding=var.content.encoding, content.type=var.content.type, content.length=var.content.length, accept=var.accept, org.id=var.org.id, precision=var.precision)


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{WriteApi$new()}}
\item \href{#method-PostWrite}{\code{WriteApi$PostWrite()}}
\item \href{#method-PostWriteWithHttpInfo}{\code{WriteApi$PostWriteWithHttpInfo()}}
\item \href{#method-clone}{\code{WriteApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WriteApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostWrite"></a>}}
\if{latex}{\out{\hypertarget{method-PostWrite}{}}}
\subsection{Method \code{PostWrite()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WriteApi$PostWrite(
  org,
  bucket,
  body,
  zap.trace.span = NULL,
  content.encoding = "identity",
  content.type = "text/plain; charset=utf-8",
  content.length = NULL,
  accept = "application/json",
  org.id = NULL,
  precision = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PostWriteWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-PostWriteWithHttpInfo}{}}}
\subsection{Method \code{PostWriteWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WriteApi$PostWriteWithHttpInfo(
  org,
  bucket,
  body,
  zap.trace.span = NULL,
  content.encoding = "identity",
  content.type = "text/plain; charset=utf-8",
  content.length = NULL,
  accept = "application/json",
  org.id = NULL,
  precision = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WriteApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
